---
# Volume mounting for RDS after MySQL installation - idempotent version
- name: Check if MySQL volume is already mounted
  shell: "mountpoint -q /var/lib/mysql"
  register: mysql_volume_already_mounted
  failed_when: false
  changed_when: false

- name: Skip volume operations if already mounted
  debug:
    msg: "MySQL volume already mounted at /var/lib/mysql, skipping volume operations"
  when: mysql_volume_already_mounted.rc == 0

- name: MySQL volume setup block (only if not mounted)
  block:
    - name: Stop MySQL service before volume operations
      service:
        name: mysql
        state: stopped

    - name: Check if volume device exists
      stat:
        path: "{{ rds_volume_device }}"
      register: volume_device_check

    - name: Fail if volume device not found
      fail:
        msg: "Volume device {{ rds_volume_device }} not found!"
      when: not volume_device_check.stat.exists

    - name: Backup existing MySQL data
      shell: |
        if [ -d /var/lib/mysql ] && [ "$(ls -A /var/lib/mysql)" ]; then
          mkdir -p /tmp/mysql_initial_data
          cp -a /var/lib/mysql/* /tmp/mysql_initial_data/
        fi

    - name: Mount volume to /var/lib/mysql
      mount:
        path: /var/lib/mysql
        src: "{{ rds_volume_device }}"
        fstype: ext4
        state: mounted
        opts: defaults

    - name: Restore MySQL data to volume
      shell: |
        if [ -d /tmp/mysql_initial_data ] && [ "$(ls -A /tmp/mysql_initial_data)" ]; then
          cp -a /tmp/mysql_initial_data/* /var/lib/mysql/
          chown -R mysql:mysql /var/lib/mysql/
        fi

    - name: Clean up temporary MySQL data
      file:
        path: /tmp/mysql_initial_data
        state: absent

    - name: Start MySQL service after volume setup
      service:
        name: mysql
        state: started

  when: mysql_volume_already_mounted.rc != 0

